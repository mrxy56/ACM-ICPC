#include<cstdio>
#include<vector>
#include<algorithm>
using namespace std;
int n,a,b,c;
long long cow[100010],down[100010],up[100010],cost[100010];
vector<vector<int> >e,w; 
long long dfs1(int cur,int prev){ 
    down[cur]=cow[cur];
	long long c=0;
	for(int i=0;i<e[cur].size();i++){ 
	    if(e[cur][i]==prev) continue;
		c+=dfs1(e[cur][i],cur);
		c+=down[e[cur][i]]*w[cur][i];
		down[cur]+=down[e[cur][i]];
	}
    return c;
}   
long long dfs2(int cur,int prev){ 
    long long c=cost[cur];
    for(int i=0;i<e[cur].size();i++){ 
	    if(e[cur][i]==prev) continue;
		cost[e[cur][i]]=cost[cur]-down[e[cur][i]]*w[cur][i]+up[e[cur][i]]*w[cur][i];
		c=min(c,dfs2(e[cur][i],cur));
	}
	return c;
}
int main(){ 
    freopen("gather.in","r",stdin);
	freopen("gather.out","w",stdout);
	scanf("%d",&n);
	e.resize(n);w.resize(n);
    for(int i=0;i<n;i++) scanf("%d",&cow[i]);
	for(int i=0;i<n-1;i++){ 
		scanf("%d%d%d",&a,&b,&c);
        a--;b--;
		e[a].push_back(b);w[a].push_back(c);
		e[b].push_back(a);w[b].push_back(c);
	}
    cost[0]=dfs1(0,-1);
	for(int i=0;i<n;i++) up[i]=down[0]-down[i];
    printf("%I64d\n",dfs2(0,-1));
    return 0;
}
