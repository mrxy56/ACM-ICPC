#include<cstdio>
#include<queue>
#include<cstring>
#include<algorithm>
using namespace std;
struct stat{
	int a[10];
	int xpos;
	int dist;
};
queue<stat> q;
bool vis[370000];
int fac[10];
int trans(stat s){
	int ans=0;
	for(int i=1;i<=9;i++){
		int temp=s.a[i]-1;
		for(int j=1;j<i;j++)
		    if(s.a[j]<s.a[i]) temp--;
	    ans+=temp*fac[9-i];
	}
	return ans;
}
int main(){
	fac[0]=1;
	for(int i=1;i<=9;i++) fac[i]=fac[i-1]*i;
	int cnt=0;
	stat s1,s2;
	char temp;
	for(int i=1;i<=9;i++){
	    scanf("%c",&temp);
	    s1.a[i]=temp=='.'?9:temp-'0';
	    if(temp=='.') s1.xpos=i;
    }
    s1.dist=0;
	getchar();
	for(int i=1;i<=9;i++){
	    scanf("%c",&temp);
	    s2.a[i]=temp=='.'?9:temp-'0';
	    if(temp=='.') s2.xpos=i;
    }
    memset(vis,0,sizeof(vis));
	while(!q.empty()) q.pop();
	q.push(s1);
	vis[trans(s1)]=true;
	while(!q.empty()){
         stat ts=q.front(),ns;
         q.pop();
         if(trans(ts)==trans(s2)){
             printf("%d\n",ts.dist);
             break;
         }
         int x,y,xpos=ts.xpos;
         x=(xpos-1)/3+1; y=(xpos-1)%3+1;
		 ns=ts;
         if(x!=1){
         	swap(ns.a[xpos],ns.a[xpos-3]);
         	if(!vis[trans(ns)]){
                ns.xpos-=3;
                ns.dist=ts.dist+1;
                q.push(ns);vis[trans(ns)]=true;
            }
         }
         ns=ts;
         if(x!=3){
         	swap(ns.a[xpos],ns.a[xpos+3]);
         	if(!vis[trans(ns)]){
            	ns.xpos+=3;
            	ns.dist=ts.dist+1;
            	q.push(ns);vis[trans(ns)]=true;
            }
         }
         ns=ts;
         if(y!=1){
         	swap(ns.a[xpos],ns.a[xpos-1]);
         	if(!vis[trans(ns)]){
            	ns.xpos-=1; 
            	ns.dist=ts.dist+1;
            	q.push(ns);vis[trans(ns)]=true;
            }
         }
         ns=ts;
         if(y!=3){
         	swap(ns.a[xpos],ns.a[xpos+1]);
         	if(!vis[trans(ns)]){
            	ns.xpos+=1;
            	ns.dist=ts.dist+1;
            	q.push(ns);vis[trans(ns)]=true;
            }
         }
	}
	return 0;
}