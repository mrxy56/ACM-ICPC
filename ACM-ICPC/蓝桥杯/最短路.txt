#include <iostream>
#include <vector>
#include <utility>
#include <queue>
#include <cstdio>
#include <cstring>
using namespace std;
const int maxn=20000,MAX=~0U>>1;
int n,m,src;
vector<pair<int,int> > g[maxn+10];
int dist[maxn+10];
bool inQue[maxn+10];
queue<int> que;
void spfa(){
    for(int i=1;i<=n;i++)
        dist[i]=MAX;
    dist[src]=0;
    while(!que.empty()) que.pop();
    que.push(src);
    inQue[src]=true;
    while(!que.empty()){
        int u=que.front();
        que.pop();
        for(int i=0;i<g[u].size();i++)
        if(dist[u]+g[u][i].second<dist[g[u][i].first]){
            dist[g[u][i].first]=dist[u]+g[u][i].second;
            if(!inQue[g[u][i].first]){
                inQue[g[u][i].first]=true;
                que.push(g[u][i].first);
            }
        }
        inQue[u]=false;
    }
}
int main()
{
    while(scanf("%d%d",&n,&m)==2){
        int x,y,z;
        memset(inQue,false,sizeof(inQue));
        for(int i=1;i<=n;i++)
            g[i].clear();
        for(int i=0;i<m;i++){
            scanf("%d%d%d",&x,&y,&z);
            g[x].push_back(make_pair(y,z));
        }
        src=1;
        spfa();
        for(int i=2;i<=n;i++)
            printf("%d\n",dist[i]);
    }
    return 0;
}