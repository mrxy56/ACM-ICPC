#include <stdio.h>
#include <string.h>
#include <stdlib.h>
char s[100010][100]={""},sorted[100010][100]={""};
int count=0,x=0;
int cmp_string(const void*_a,const void*_b);
int main(void)
{
    int set,n,i,j,k;
    scanf("%d",&set);
    while(set--)
    {
        int flag=0;
        scanf("%d",&n);
        getchar();
        for(i=0;i<n;i++)
        {
            fgets(s[i],100,stdin);
            char*p=s[i];
            char ch='\0';
            int t=0;
            j=0;
            while(ch!='\n')
            {
                sscanf(p,"%c%n",&ch,&t);
                p+=t;
                if(ch!='-')
                {
                   if(ch>='A'&&ch<='C')
                   {sorted[i][j++]='2';continue;}
                   if(ch>='D'&&ch<='F')
                   {sorted[i][j++]='3';continue;}
                   if(ch>='G'&&ch<='I')
                   {sorted[i][j++]='4';continue;}
                   if(ch>='J'&&ch<='L')
                   {sorted[i][j++]='5';continue;}
                   if(ch>='M'&&ch<='O')
                   {sorted[i][j++]='6';continue;}
                   if(ch>='P'&&ch<='S')
                   {sorted[i][j++]='7';continue;}
                    if(ch>='T'&&ch<='V')
                   {sorted[i][j++]='8';continue;}
                   if(ch>='W'&&ch<='Y')
                   {sorted[i][j++]='9';continue;}
                   if(ch!='\n')
                    sorted[i][j++]=ch;
                }
            }
        }
        qsort(sorted,n,sizeof(sorted[0]),cmp_string);
        k=0;count=1;
        while(sorted[k][0]!='\0')
        {
           while(sorted[k][0]!='\0'&&strcmp(sorted[k],sorted[k+1])==0)
           {
                count++;
                k++;
           }
        if(sorted[k][0]!='\0'&&count>1)
        {
             flag=1;
             x=0;
             while(x<=2)
             printf("%c",sorted[k][x++]);
             printf("-");
             while(sorted[k][x])
            printf("%c",sorted[k][x++]);
            printf(" %d\n",count);
        }
        k++; count=1;
        }
     if(!flag)
     {
        printf("No duplicates.\n\n");
        continue;
     }
        memset(s,'\0',sizeof(s));
        memset(sorted,'\0',sizeof(sorted));
    if(set>0) printf("\n");
    }
    return 0;
}
int cmp_string(const void*_a,const void*_b)
{
    char*a=(char*)_a;
    char*b=(char*)_b;
    return strcmp(a,b);
}
