#include <cmath>
#include <cstdio>
#include <cstring>
#include <string>
using namespace std;
int quickSelect(long long *c,long long beg,long long end,int k)
{
    long long pivot,temp;
    int i,j;
    pivot=c[beg];
    i=beg;
    j=end+1;
    for(;;)
    {
        while(c[++i]<pivot);
        while(c[--j]>pivot);
        if(i>j) break;
        temp=c[i];
        c[i]=c[j];
        c[j]=temp;
    }
    temp=c[beg];
    c[beg]=c[j];
    c[j]=temp;
    if(j-beg==k-1)
    return c[j];
    else if(j-beg>=k)
    return quickSelect(c,beg,j-1,k);
    else
    return quickSelect(c,j+1,end,k-j+beg-1);
}
const int maxn=1000000+10;
int n,i;
long long c[maxn],temp,tot,M,x1,ans;
int main(void)
{
      while(scanf("%d",&n)==1)
      {
          memset(c,0,sizeof(0));
          tot=0;ans=0;
          for(i=1;i<=n;i++)
          {
              scanf("%lld",&temp);
              tot+=temp;
              c[i]=temp;
          }
          M=tot/n;
          c[0]=0;
          for(i=1;i<n;i++)
              c[i]+=c[i-1]-M;
          x1=quickSelect(c,0,n-1,n/2+1);
          for(i=0;i<n;i++)
          {
               if(x1<c[i])
                  ans+=c[i]-x1;
                else
                  ans+=x1-c[i];
          }
          printf("%lld\n",ans);
      }
       return 0;
}
