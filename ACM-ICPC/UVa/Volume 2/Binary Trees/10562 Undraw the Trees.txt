#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cctype>
using namespace std;
typedef struct Tnode{
    char c;
    int num;
    struct Tnode *son[210];
}Node;
char s[210][210];
Node *newnode(){
    Node*u=(Node*)malloc(sizeof(Node));
    if(u!=NULL){
       memset(u->son,NULL,sizeof(u->son));
    }
    return u;
}
bool is_valid(char ch){
    if(isprint(ch)&&ch!='-'&&ch!='|'&&ch!=' '&&ch!='#')
       return true;
    else
       return false;
}
Node* addnode(char ch,int i,int j){
    int k,left,right;
    Node*u;
    u=newnode();
    u->c=ch;u->num=0;
    if(s[i+1][j]=='|'){
        k=j;
        while(s[i+2][k]=='-'){
             k--;
        }
        left=k+1;
        k=j;
        while(s[i+2][k]=='-'){
             k++;
        }
        right=k-1;
        for(int p=left;p<=right;p++)
           if(is_valid(s[i+3][p])){
              u->son[u->num]=addnode(s[i+3][p],i+3,p);
              u->num++;
           }
    }
    return u;
}
void print_tree(Node*u){
    printf("%c",u->c);
    printf("(");
    for(int i=0;i<u->num;i++)
       print_tree(u->son[i]);
    printf(")");
    return;
}
void remove(Node*u){
     if(u==NULL) return;
     for(int i=1;i<=u->num;i++)
        remove(u->son[i]);
     u->num=0;
     free(u);
}
Node*root;
int main(){
    //freopen("a.txt","r",stdin);
    int T,r,c;
    scanf("%d",&T);
    while(T--){
        int i=0;
        memset(s,'\0',sizeof(s));
        while(fgets(s[i],210,stdin)!=NULL){
           if(s[i][0]=='\n') continue;
           if(s[i][0]=='#') break;
           else i++;
        }
        r=i;
        if(r==0) {printf("()\n");continue;}
        c=strlen(s[0])-1;
        for(int i=0;i<c;i++){
            if(is_valid(s[0][i]))
              root=addnode(s[0][i],0,i);
        }
        printf("(");
        print_tree(root);
        printf(")\n");
        remove(root);
    }
    return 0;
}