#include <cstdio>
#include <cstring>
using namespace std;
int a[160][160];
int w,h,i,j,ans,cycle,len,num=0,count=0;
char ch;
void init(void)
{
    memset(a,0,sizeof(a));
    for(i=0;i<h;i++)
    {
        for(j=0;j<w;j++)
        {
            ch=getchar();
            if(ch=='\\')
            {
                a[i*2][j*2]=2;
                a[i*2+1][j*2+1]=2;
            }
            if(ch=='/')
            {
                a[i*2][j*2+1]=1;
                a[i*2+1][j*2]=1;
            }
        }
        getchar();
    }
}
void floodfill(int x,int y)
{
    if(x<0||x>=h*2)return;
    if(y<0||y>=w*2)return;
    if(!a[x][y])
    {
       a[x][y]=3;
       if(a[x][y-1]==1||a[x][y+1]==1||a[x-1][y]==1||a[x+1][y]==1)
       {
                           floodfill(x,y-1);floodfill(x+1,y-1);
        floodfill(x-1,y);                   floodfill(x+1,y);
        floodfill(x-1,y+1);floodfill(x,y+1);
       }
       if(a[x][y-1]==2||a[x][y+1]==2||a[x-1][y]==2||a[x+1][y]==2)
       {
        floodfill(x-1,y-1);                 floodfill(x,y-1);
        floodfill(x-1,y);                   floodfill(x+1,y);
                           floodfill(x,y+1);floodfill(x+1,y+1);
       }
    }
}
int dfs(int x,int y)
{
    if(!a[x][y])
    {
        a[x][y]=4;
        if(a[x][y-1]==1||a[x][y+1]==1||a[x-1][y]==1||a[x+1][y]==1)
        {
                         dfs(x,y-1);dfs(x+1,y-1);
            dfs(x-1,y);             dfs(x+1,y);
            dfs(x-1,y+1);dfs(x,y+1);
        }
       if(a[x][y-1]==2||a[x][y+1]==2||a[x-1][y]==2||a[x+1][y]==2)
       {
            dfs(x-1,y-1);dfs(x,y-1);
            dfs(x-1,y);             dfs(x+1,y);
                         dfs(x,y+1);dfs(x+1,y+1);
       }
        count++;
    }
    return count;
}
void print(void)
{
    printf("Maze #%d:\n",num);
    if(cycle)
    {
        printf("%d Cycles; the longest has length %d.\n\n",cycle,len);
    }
    else
        printf("There are no cycles.\n\n");
}
int main(void)
{
    while(scanf("%d%d\n",&w,&h)==2)
    {
        if(w==0&&h==0) break;
        init();
        ans=0;num++;cycle=0;len=0;
        for(i=0;i<h*2;i++)
        {
           if(!a[i][0])
               floodfill(i,0);
           if(!a[i][w*2-1])
               floodfill(i,w*2-1);
        }
        for(j=0;j<w*2;j++)
        {
            if(!a[0][j])
               floodfill(0,j);
            if(!a[h*2-1][j])
               floodfill(h*2-1,j);
        }
        for(i=0;i<h*2;i++)
           for(j=0;j<w*2;j++)
           {
               count=0;
               ans=dfs(i,j);
               if(ans)
               {
                   cycle++;
                   if(ans>len)
                      len=ans;
               }
           }
        print();
    }
    return 0;
}