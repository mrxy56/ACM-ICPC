#include<cstdio>
#include<cmath>
#include<vector>
#include<algorithm>
using namespace std;
#define FOR(i,s,t) for(int i=(s);i<(t);i++)
const int maxn=1000005;
const double eps=1e-8;
int n;
struct point{
	double x,y;
	point(){}
	point(double a,double b):x(a),y(b){}
	friend point operator + (const point &a,const point &b){
		return point(a.x+b.x,a.y+b.y);
	}
	friend point operator - (const point &a,const point &b){
		return point(a.x-b.x,a.y-b.y);
	}
	friend point operator * (const point &a,const double &b){
		return point(a.x*b,a.y*b);
	}
	friend point operator / (const point &a,const double &b){
		return point(a.x/b,a.y/b);
	}
};
double det(const point &a,const point &b){
	return a.x*b.y-a.y*b.x;
}
struct polygon{
	int n;
	point a[maxn];
	double area(){
		double sum=0;
		a[n]=a[0];
		for(int i=0;i<n;i++)
			sum+=det(a[i],a[i+1]);
		return sum;
	}
	point MassCenter(){
		point ans=point(0,0);
		a[n]=a[0];
		for(int i=0;i<n;i++){
			double area=det(a[i],a[i+1]);
			ans=ans+(a[i]+a[i+1])*area;
		}
		return ans/area()/3;
	}
}poly;
int main(){
	int T;
	scanf("%d",&T);
	while(T--){
		scanf("%d",&n);
		poly.n=n;
		FOR(i,0,n)
			scanf("%lf%lf",&poly.a[i].x,&poly.a[i].y);
		point p=poly.MassCenter();
		printf("%.2f %.2f\n",p.x+eps,p.y+eps);
	}
    return 0;
}
  