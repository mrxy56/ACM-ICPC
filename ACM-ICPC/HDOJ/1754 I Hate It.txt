#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
const int N=200010;
int n,m,x,y,temp;
char s[10];
struct IntervalTree{
	int top[N*4];
	IntervalTree(){
		memset(top,0,sizeof(top));
	}
	int query(int L,int R,int l,int r,int num){
		if(l<=L&&R<=r) return top[num];
		int mid=(L+R)>>1,ret=-1;
		if(l<=mid) ret=max(ret,query(L,mid,l,r,(num<<1)));
		if(r>mid) ret=max(ret,query(mid+1,R,l,r,(num<<1)+1));
		return ret;
	}
	void modify(int L,int R,int x,int d,int num){
		if(L==R) {top[num]=d; return;}
		int mid=(L+R)>>1;
		if(x<=mid) modify(L,mid,x,d,(num<<1));
		else modify(mid+1,R,x,d,(num<<1)+1);
		top[num]=max(top[num<<1],top[(num<<1)+1]);
	}
}tree;
int main(){
	while(scanf("%d%d",&n,&m)==2){
		memset(tree.top,0,sizeof(tree.top));
		for(int i=1;i<=n;i++){
			scanf("%d",&temp);
			tree.modify(1,n,i,temp,1);
		}
		for(int i=1;i<=m;i++){
			scanf("%s%d%d",s,&x,&y);
			if(s[0]=='Q') printf("%d\n",tree.query(1,n,x,y,1));
			else tree.modify(1,n,x,y,1);
		}
	}
	return 0;
}