/*
ID:mrxy564
PROG:msquare
LANG:C++
*/
#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
const int MAXN=9;
struct state{ 
    char dir;
	int parent;
	int val;
	int num;
};
state s,e,q[41000];
int cnt=0,front,rear,Cnt;
char ans[41000],minans[41000];
bool flag=false,vis[41000];
int factorial[MAXN];
void intToArray(int x,int a[MAXN]){ 
    bool used[MAXN];
	int i,j,temp;
	for(i=1;i<=8;i++) used[i]=false;
	for(i=1;i<=8;i++){ 
	    temp=x/factorial[8-i];
		for(j=1;j<=8;j++) if(!used[j]){ 
		    if(temp==0) break;
			temp--;
		}
		a[i]=j;
		used[j]=true;
		x%=factorial[8-i];
	}
}
int arrayToInt(int a[MAXN]){ 
    int ans,i,j,temp;
	ans=0;
	for(i=1;i<=8;i++){ 
	    temp=a[i]-1;
		for(j=1;j<i;j++) if(a[j]<a[i]) temp--;
		ans+=factorial[8-i]*temp;
	}
	return ans;
}
void init(){
	factorial[0]=1;
	for(int i=1;i<8;i++)
		factorial[i]=factorial[i-1]*i;
	for(int i=0;i<41000;i++)
		minans[i]='C';
	int a[MAXN]={0,1,2,3,4,8,7,6,5};
	s.val=arrayToInt(a);
	for(int i=1;i<=4;i++)
       scanf("%d",&a[i]);
	for(int i=8;i>=5;i--)
	   scanf("%d",&a[i]);
	e.val=arrayToInt(a);
    memset(vis,0,sizeof(vis));
	return;
}
void change(int st,char dir,int pa){
	int a[MAXN];
	intToArray(st,a);
    if(dir=='A'){ 
	    for(int i=1;i<=4;i++)
			swap(a[i],a[i+4]);
	}
	if(dir=='B'){ 
		int x1=a[1],x2=a[5];
	    for(int i=4;i>=1;i--){ 
		    int temp=i%4+1;
			a[temp]=a[i];
			a[temp+4]=a[i+4];
		}
		a[2]=x1;a[6]=x2;
	}
    if(dir=='C'){ 
	    int x3=a[2];
		a[2]=a[6];
		a[6]=a[7];
		a[7]=a[3];
		a[3]=x3;
	}
	int temp=arrayToInt(a);
	if(!vis[temp]){ 
	    vis[temp]=true;
		state news;
		news.dir=dir;
		news.parent=pa;
		news.val=temp;
		news.num=++rear;
		q[rear]=news;
	}
	return;
}
void print(state st){ 
    if(st.val!=s.val){ 
	    print(q[st.parent]);
		ans[cnt++]=q[st.num].dir;
	}
}
void bfs(){ 
    front=-1;rear=0;
	vis[s.val]=true;
	q[0]=s;
	while(front<rear&&!flag){ 
	    int temp=q[++front].val;
		while(temp==e.val&&front<=rear){
			e=q[front];
			print(e);
			if(strcmp(ans,minans)<0){ 
	          for(int i=0;i<cnt;i++)
		       	 minans[i]=ans[i];
			  Cnt=cnt;
			  cnt=0;
	        }
		    flag=true;
			temp=q[++front].val;
		}
		if(flag) break;
        change(temp,'A',front);
		change(temp,'B',front);
		change(temp,'C',front);
	}
	return;
}
int main(){ 
	freopen("msquare.in","r",stdin);
	freopen("msquare.out","w",stdout);
    init();
    bfs();
	if(flag){
	   int num=0;
	   printf("%d\n",Cnt);
	   for(int i=0;i<Cnt;i++){
		   printf("%c",minans[i]);
		   num++;
		   if(num%60==0) printf("\n");
	   }
	   if(num%60!=0||Cnt==0) printf("\n");
	}
	return 0;
}