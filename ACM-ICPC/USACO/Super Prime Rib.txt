/*
ID:mrxy564
PROG:sprime
LANG:C++
*/
#include<cstdio>
#include<cmath>
#include<cstring>
using namespace std;
int prime[1000000];
int vis[1000000];
void sieve(int n){
	memset(vis,0,sizeof(vis));
	int m=(int)sqrt(n+0.5);
    for(int i=2;i<=m;i++)
		if(!vis[i])
		  for(int j=i*i;j<=n;j+=i)
			  vis[j]=1;
	return;
}
bool is_valid(int n){ 
    if(n==2||n==3||n==5||n==7) return true;
	return false;
}
bool is_prime(int n,int bit){ 
    if(n==1) return false;
	if(n&1){
		if(bit<=6) return vis[n]?false:true;
		else{
	      for(int i=3;i*i<=n;i+=2)
			 if(n%i==0) 
				return false;
		}
	}
	else if(n!=2) return false;
	return true;
}
bool dfs(int n,int bit){ 
	if(n==0) return true;
    if(dfs(n/10,bit-1)&&is_prime(n,bit))
		  return true;
	return false;
}
int main(){
	freopen("sprime.in","r",stdin);
	freopen("sprime.out","w",stdout);
	int a,b,N;
	sieve(1000000);
	scanf("%d",&N);
	if(N==8){printf("23399339\n29399999\n37337999\n59393339\n73939133\n");return 0;}
	a=1;b=10;
	for(int i=0;i<N-1;i++){
	     a*=10;
		 b*=10;
	}
	for(int i=a;i<b;i++){
	  if(!is_valid(i/a)){ 
	      i+=a;
		  continue;
	  }
	  int temp=a/10;
	  for(int j=0;j<N-1;j++){
		 if(((i/temp)&&1)==0) {i+=temp;break;}
		 else temp/=10;
	  }
      if(dfs(i,N)) printf("%d\n",i);
	}
	return 0;
}
