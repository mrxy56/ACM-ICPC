/*
ID:mrxy564
PROG:lamps
LANG:C++
*/
#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
int bstate[110],estate[110],temp[110];
int n,c,cnt=0,tempnum,bit,acnt=0;
char s[110][110];
int count(int num){ 
    int bit=1,cnt=0;
    for(int i=0;i<4;i++){ 
	    cnt+=bit&num?1:0;
		bit<<=1;
	}
	return cnt;
}
void change(int ope){ 
    if(ope==1){ 
	    for(int i=1;i<=n;i++)
			temp[i]=temp[i]?0:1;
	}
	if(ope==2){ 
	    for(int i=1;i<=n;i+=2)
		    temp[i]=temp[i]?0:1;
	}
	if(ope==3){ 
	    for(int i=2;i<=n;i+=2)
			temp[i]=temp[i]?0:1;
	}
	if(ope==4){ 
	    for(int i=1;i<=n;i++){ 
		    if((i-1)%3==0)
			    temp[i]=temp[i]?0:1;
		}
	}
	return;
}
bool equal(int a[],int b[]){ 
    for(int i=1;i<=n;i++){
		if(b[i]==3&&a[i]!=0) return false;
		if(b[i]==2&&a[i]==0) return false;
	}
	return true;
}
int main(){
	freopen("lamps.in","r",stdin);
	freopen("lamps.out","w",stdout);
    scanf("%d%d",&n,&c);
	for(int i=0;i<110;i++) bstate[i]=1;
	for(int i=0;i<110;i++) estate[i]=1;
	while(1){
	   scanf("%d",&tempnum);
	   if(tempnum==-1) break;
	   else estate[tempnum]=2;
	}
	while(1){ 
	   scanf("%d",&tempnum);
	   if(tempnum==-1) break;
	   else estate[tempnum]=3;
	}
	bool flag=false;
	for(int i=0;i<16;i++){ 
	     bit=count(i);
	     if((bit&1)!=(c&1)||bit>c) continue;
	     for(int j=1;j<=n;j++)
		     temp[j]=bstate[j];
	     if(i&1) change(1);
	     if(i&2) change(2);
	     if(i&4) change(3);
	     if(i&8) change(4);
	     if(equal(temp,estate)){
			for(int i=n;i>=1;i--){ 
			    s[acnt][i-1]=temp[i]+'0';
			}
			s[acnt][n+1]='\n';
			acnt++;
			flag=true;
	   }
	}
	if(flag){ 
	   for(int i=0;i<acnt-1;i++)
		   for(int j=i+1;j<acnt;j++)
			if(strcmp(s[i],s[j])>0){ 
				char temps[110];
				strcpy(temps,s[i]);
		    	strcpy(s[i],s[j]);
			    strcpy(s[j],temps);
			}
	   for(int i=0;i<acnt;i++){ 
	        printf("%s\n",s[i]);
	   }
	}
	if(!flag)
	   printf("IMPOSSIBLE\n");
	return 0;
}